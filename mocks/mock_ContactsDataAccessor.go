// Code generated by MockGen. DO NOT EDIT.
// Source: ../interfaces/ContactsDataAccessor.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	models "github.com/jon-whit/go-contacts/models"
	reflect "reflect"
)

// MockContactsDataAccessor is a mock of ContactsDataAccessor interface
type MockContactsDataAccessor struct {
	ctrl     *gomock.Controller
	recorder *MockContactsDataAccessorMockRecorder
}

// MockContactsDataAccessorMockRecorder is the mock recorder for MockContactsDataAccessor
type MockContactsDataAccessorMockRecorder struct {
	mock *MockContactsDataAccessor
}

// NewMockContactsDataAccessor creates a new mock instance
func NewMockContactsDataAccessor(ctrl *gomock.Controller) *MockContactsDataAccessor {
	mock := &MockContactsDataAccessor{ctrl: ctrl}
	mock.recorder = &MockContactsDataAccessorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockContactsDataAccessor) EXPECT() *MockContactsDataAccessorMockRecorder {
	return m.recorder
}

// ListUserContacts mocks base method
func (m *MockContactsDataAccessor) ListUserContacts(userID string) ([]models.Contact, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListUserContacts", userID)
	ret0, _ := ret[0].([]models.Contact)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListUserContacts indicates an expected call of ListUserContacts
func (mr *MockContactsDataAccessorMockRecorder) ListUserContacts(userID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListUserContacts", reflect.TypeOf((*MockContactsDataAccessor)(nil).ListUserContacts), userID)
}

// CreateUserContact mocks base method
func (m *MockContactsDataAccessor) CreateUserContact(userID string, contact models.Contact) (models.Contact, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUserContact", userID, contact)
	ret0, _ := ret[0].(models.Contact)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateUserContact indicates an expected call of CreateUserContact
func (mr *MockContactsDataAccessorMockRecorder) CreateUserContact(userID, contact interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUserContact", reflect.TypeOf((*MockContactsDataAccessor)(nil).CreateUserContact), userID, contact)
}
